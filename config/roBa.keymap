// OS設定を日本語キーボードのまま使用するための変換定義
#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB           &kp W         &kp E         &kp R                          &kp T                                                          &kp Y        &kp U  &lt 4 I    &kp O    &kp P
&kp A             &kp S         &kp D         &kp F                          &kp G        &kp LS(LG(S))                    &kp MINUS        &kp H        &kp J  &lt 5 K    &kp L    &kp COLON
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                          &kp B        &kp ESCAPE                       &kp SEMICOLON    &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 3 INT_MUHENKAN  &lt 2 SPACE  &lt_to_layer_0 6 INT_HENKAN      &lt 2 BACKSPACE  &lt 1 ENTER                             &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp N1  &kp NUMBER_2    &kp NUMBER_3  &kp NUMBER_4  &kp N5                      &kp NUMBER_6    &kp N7  &kp N8  &kp N9  &kp N0
&kp F1  &kp F2          &kp UP_ARROW  &kp F4        &kp F5  &trans      &trans  &kp F6          &kp F7  &kp F8  &kp F9  &kp F10
&trans  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT     &trans  &trans      &trans  &kp UNDERSCORE  &trans  &trans  &trans  &trans
&trans  &trans          &trans        &trans        &trans  &trans      &trans  &trans                                  &trans
            >;
        };

        NUM {
            bindings = <
&kp EXCL          &kp AT_SIGN         &kp POUND         &kp DOLLAR     &kp PERCENT                                           &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp LS(Q)         &kp Q               &kp LC(UP_ARROW)  &trans         &kp BACKSLASH  &kp LC(LA(KP_NUMBER_0))      &kp HOME  &kp MINUS       &kp EQUAL      &kp PLUS          &kp LEFT_BRACKET      &kp RIGHT_BRACKET
&mt LEFT_SHIFT Z  &kp LC(LEFT_ARROW)  &kp LC(DOWN)      &kp LC(RIGHT)  &kp PIPE       &kp EQUAL                    &kp END   &kp UNDERSCORE  &kp TILDE      &kp SINGLE_QUOTE  &kp LEFT_BRACE        &kp RIGHT_BRACE
&trans            &trans              &trans            &trans         &trans         &trans                       &trans    &trans                                                                 &trans
            >;
        };

        ARROW {
            bindings = <
&kp LC(NUMBER_1)    &kp LC(LS(NUMBER_1))  &kp LS(LC(PERCENT))  &kp LC(R)  &kp LC(N5)                                 &trans         &kp PAGE_UP         &kp LC(PLUS)        &kp PAGE_DOWN        &trans
&kp LC(A)           &kp LC(S)             &kp LC(D)            &kp LC(F)  &kp LC(G)   &trans      &kp LA(LS(EQUAL))  &kp LC(MINUS)  &kp LC(PAGE_UP)     &kp LS(UP_ARROW)    &kp LS(PAGE_DOWN)    &kp LC(COLON)
&kp LC(LEFT_SHIFT)  &kp LC(X)             &kp LC(C)            &kp LC(V)  &kp LC(B)   &trans      &kp LA(LC(V))      &trans         &kp LS(LEFT_ARROW)  &kp LS(DOWN_ARROW)  &kp LS(RIGHT_ARROW)  &kp LC(LS(RIGHT))
&trans              &trans                &trans               &trans     &trans      &trans      &trans             &kp LA(ENTER)                                                               &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                        &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans    &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans    &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &mkp MB3  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans    &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &mkp MB5  &mkp MB1  &trans  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans    &mkp MB4  &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
